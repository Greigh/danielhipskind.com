<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Top HackerNews Articles</title>
    <link rel="stylesheet" href="/styles.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;800&display=swap" rel="stylesheet">
</head>
<body>
    <header>
        <h1>HackerNews Articles</h1>
        <nav>
            <a href="/">Newest</a>
            <a href="/top">Top</a>
        </nav>
    </header>

    <main>
        <div id="app-data" 
             data-total-articles="<%= totalArticles %>" 
             data-articles-per-page="<%= ARTICLES_PER_PAGE %>">
        </div>

        <ul id="articleList" class="articles">
            <% articles.forEach(function(article) { %>
                <li>
                    <article>
                        <img
                            src="<%= article.imageUrl %>"
                            alt="<%= article.title %>"
                            class="article-image"
                            loading="lazy"
                            onerror="this.src='/noimagehere-shubham-dhage-unsplash.jpg'"
                        />
                        <div class="article-content">
                            <h2>
                                <a href="<%= article.link %>" target="_blank" rel="noopener"><%= article.title %></a>
                            </h2>
                            <p class="meta">
                                <% if (article.sourceName) { %>
                                    <span class="website"><%= article.sourceName %></span>
                                <% } %>
                                <% if (article.author) { %>
                                    <span class="author"><%= article.author %></span>
                                <% } %>
                                <span class="time"><%= article.formattedTime %></span>
                            </p>
                        </div>
                    </article>
                </li>
            <% }); %>
        </ul>

        <div id="loading" class="spinner"></div>
        <div id="error">Error loading articles. Please try again.</div>
        
        <div id="pagination">
            <button id="prevPage" disabled><span>Previous</span></button>
            <div class="current-page" id="currentPage">1</div>
            <button id="nextPage"><span>Next</span></button>
        </div>
    </main>

    <script>
    (function () {
        const appData = document.getElementById('app-data');
        if (!appData) {
            console.error('Missing app-data element');
            return;
        }

        const ARTICLES_PER_PAGE = parseInt(appData.getAttribute('data-articles-per-page'), 10);
        const totalArticles = parseInt(appData.getAttribute('data-total-articles'), 10);

        if (isNaN(ARTICLES_PER_PAGE) || isNaN(totalArticles)) {
            console.error('Invalid data attributes');
            return;
        }
        
        let currentPage = 1;
        let loading = false;
        let hasMore = true;

        function setLoadingState(isLoading) {
            loading = isLoading;
            document.getElementById('loading').style.display = isLoading ? 'block' : 'none';
            document.getElementById('nextPage').disabled = isLoading;
            document.getElementById('prevPage').disabled = isLoading || currentPage <= 1;
        }

        async function loadMoreArticles() {
            if (loading || !hasMore) return;
            
            setLoadingState(true);
            const errorEl = document.getElementById('error');
            errorEl.style.display = 'none';

            try {
                const response = await fetch(`/api/articles?page=${currentPage + 1}&type=top`);
                if (!response.ok) throw new Error('Network response was not ok');
                
                const data = await response.json();
                if (data.articles && data.articles.length > 0) {
                    const list = document.getElementById('articleList');
                    const articlesHTML = data.articles.map(renderArticle).join('');
                    list.insertAdjacentHTML('beforeend', articlesHTML);
                    
                    currentPage++;
                    hasMore = data.hasMore && currentPage * ARTICLES_PER_PAGE < totalArticles;
                    updatePaginationControls();
                } else {
                    hasMore = false;
                }
            } catch (error) {
                console.error('Error loading articles:', error);
                errorEl.style.display = 'block';
            } finally {
                setLoadingState(false);
            }
        }

        function updatePaginationControls() {
            const prevButton = document.getElementById('prevPage');
            const nextButton = document.getElementById('nextPage');
            const currentPageSpan = document.getElementById('currentPage');
            
            prevButton.disabled = currentPage <= 1;
            nextButton.disabled = !hasMore;
            currentPageSpan.textContent = currentPage;

            const paginationEl = document.getElementById('pagination');
            paginationEl.style.display = hasMore ? 'flex' : 'none';
        }

        // Debounced scroll handler
        let scrollTimeout;
        function handleScroll() {
            if (scrollTimeout) clearTimeout(scrollTimeout);
            
            scrollTimeout = setTimeout(() => {
                const buffer = 800;
                const scrollPosition = window.scrollY + window.innerHeight;
                const documentHeight = document.documentElement.scrollHeight;

                if (scrollPosition + buffer >= documentHeight && !loading && hasMore) {
                    loadMoreArticles();
                }
            }, 100);
        }

        // Event Listeners
        window.addEventListener('scroll', handleScroll, { passive: true });
        
        document.getElementById('nextPage').addEventListener('click', loadMoreArticles);
        
        document.getElementById('prevPage').addEventListener('click', () => {
            if (currentPage > 1) {
                const list = document.getElementById('articleList');
                const itemsToRemove = ARTICLES_PER_PAGE;
                const children = list.children;
                
                for (let i = 0; i < itemsToRemove && children.length > 0; i++) {
                    list.removeChild(children[children.length - 1]);
                }
                
                currentPage--;
                hasMore = true;
                updatePaginationControls();
            }
        });

        // Initialize
        updatePaginationControls();
    })();
    </script>
</body>
</html>